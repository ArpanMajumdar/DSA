def find_closest_elements(nums: list[int], k: int, target: int):
    if len(nums) == k:
        return nums
    if target < nums[0]:
        return nums[0:k]
    if target > nums[-1]:
        return nums[-k:]

    closest_index = binary_search(nums, target)
    start = end = closest_index
    while (end - start + 1) < k:
        print(f"{start=}, {end=}")
        if start == 0:
            end += 1
        elif end == len(nums) - 1:
            start -= 1
        elif abs(nums[start - 1] - target) <= abs(nums[end + 1] - target):
            start -= 1
        else:
            end += 1
    return nums[start : end + 1]


def binary_search(nums: list[int], target: int) -> int:
    start, end = 0, len(nums) - 1

    # Binary search
    while start <= end:
        mid = start + (end - start) // 2
        # print(f"{start=}, {end=}, {mid=}")
        if nums[mid] == target:
            return mid
        elif target > nums[mid]:
            start = mid + 1
        else:
            end = mid - 1

    closest_index = start
    if nums[start] < target and start < len(nums) - 1:
        if abs(nums[start] - target) <= abs(nums[start + 1] - target):
            closest_index = start
        else:
            closest_index = start + 1
    elif start > 0:
        if abs(nums[start] - target) <= abs(nums[start - 1] - target):
            closest_index = start
        else:
            closest_index = start - 1
    return closest_index


if __name__ == "__main__":
    nums = [
        -9886,
        -9844,
        -9841,
        -9836,
        -9806,
        -9764,
        -9725,
        -9686,
        -9631,
        -9516,
        -9503,
        -9496,
        -9487,
        -9445,
        -9265,
        -9187,
        -9155,
        -9154,
        -9045,
        -9027,
        -9008,
        -8901,
        -8862,
        -8840,
        -8810,
        -8793,
        -8756,
        -8744,
        -8700,
        -8659,
        -8560,
        -8522,
        -8452,
        -8423,
        -8390,
        -8346,
        -8278,
        -8274,
        -8253,
        -8243,
        -8220,
        -8206,
        -8193,
        -8190,
        -8065,
        -7968,
        -7964,
        -7949,
        -7819,
        -7755,
        -7670,
        -7641,
        -7592,
        -7561,
        -7490,
        -7438,
        -7369,
        -7359,
        -7219,
        -7153,
        -7064,
        -7022,
        -6999,
        -6887,
        -6799,
        -6783,
        -6725,
        -6674,
        -6622,
        -6615,
        -6596,
        -6572,
        -6558,
        -6554,
        -6536,
        -6450,
        -6437,
        -6420,
        -6348,
        -6324,
        -6275,
        -6201,
        -6169,
        -6044,
        -6014,
        -5977,
        -5822,
        -5798,
        -5738,
        -5731,
        -5730,
        -5589,
        -5563,
        -5542,
        -5537,
        -5535,
        -5505,
        -5427,
        -5253,
        -5197,
        -5191,
        -5086,
        -5078,
        -4985,
        -4949,
        -4926,
        -4813,
        -4698,
        -4678,
        -4649,
        -4593,
        -4540,
        -4532,
        -4491,
        -4482,
        -4393,
        -4335,
        -4312,
        -4248,
        -4230,
        -4226,
        -4222,
        -4126,
        -4106,
        -4094,
        -3946,
        -3937,
        -3932,
        -3911,
        -3891,
        -3870,
        -3802,
        -3755,
        -3710,
        -3692,
        -3690,
        -3628,
        -3513,
        -3456,
        -3417,
        -3388,
        -3373,
        -3318,
        -3147,
        -3112,
        -3051,
        -2939,
        -2923,
        -2898,
        -2734,
        -2722,
        -2695,
        -2626,
        -2567,
        -2561,
        -2530,
        -2511,
        -2451,
        -2344,
        -2306,
        -2270,
        -2158,
        -2001,
        -1997,
        -1988,
        -1936,
        -1916,
        -1903,
        -1890,
        -1810,
        -1788,
        -1769,
        -1769,
        -1759,
        -1706,
        -1675,
        -1638,
        -1576,
        -1542,
        -1458,
        -1391,
        -1345,
        -1277,
        -1254,
        -1120,
        -1108,
        -1104,
        -1051,
        -935,
        -916,
        -866,
        -858,
        -833,
        -822,
        -804,
        -789,
        -752,
        -716,
        -697,
        -672,
        -660,
        -646,
        -582,
        -499,
        -453,
        -453,
        -316,
        -315,
        -238,
        -193,
        -135,
        -96,
        -71,
        -58,
        3,
        25,
        79,
        89,
        93,
        211,
        212,
        337,
        397,
        468,
        495,
        540,
        543,
        580,
        612,
        649,
        995,
        1022,
        1124,
        1286,
        1351,
        1360,
        1419,
        1436,
        1586,
        1720,
        1748,
        1788,
        1972,
        1980,
        2034,
        2138,
        2156,
        2192,
        2299,
        2308,
        2325,
        2533,
        2533,
        2599,
        2645,
        2679,
        2716,
        2735,
        2742,
        2783,
        2803,
        2818,
        2819,
        2829,
        2895,
        2927,
        2928,
        2967,
        2967,
        2976,
        3198,
        3255,
        3256,
        3356,
        3457,
        3473,
        3502,
        3544,
        3664,
        3732,
        3733,
        3760,
        3783,
        3794,
        3845,
        3928,
        3933,
        4023,
        4043,
        4047,
        4120,
        4337,
        4382,
        4451,
        4488,
        4494,
        4593,
        4599,
        4760,
        4776,
        4795,
        4797,
        4865,
        4903,
        4929,
        4962,
        4987,
        5006,
        5135,
        5168,
        5207,
        5227,
        5322,
        5337,
        5356,
        5370,
        5398,
        5476,
        5775,
        5861,
        5976,
        5980,
        6003,
        6073,
        6142,
        6158,
        6208,
        6236,
        6251,
        6268,
        6275,
        6306,
        6329,
        6372,
        6378,
        6415,
        6472,
        6535,
        6543,
        6597,
        6664,
        6721,
        6765,
        6801,
        6828,
        6854,
        7000,
        7008,
        7210,
        7213,
        7232,
        7253,
        7302,
        7454,
        7509,
        7670,
        7688,
        7723,
        7743,
        7760,
        7820,
        7823,
        7842,
        7900,
        7911,
        7923,
        7931,
        7942,
        8015,
        8070,
        8088,
        8189,
        8295,
        8324,
        8347,
        8385,
        8400,
        8460,
        8462,
        8507,
        8521,
        8561,
        8601,
        8766,
        8857,
        8870,
        8877,
        8951,
        9045,
        9092,
        9098,
        9106,
        9148,
        9186,
        9198,
        9205,
        9262,
        9413,
        9420,
        9422,
        9764,
        9914,
        9990,
    ]
    k = 1
    target = -7907
    sol = find_closest_elements(nums, k, target)
    print(f"{nums=}, {k=}, {target=}, {sol=}")
